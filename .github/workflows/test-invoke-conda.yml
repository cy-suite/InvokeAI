name: Test Invoke with Conda
on:
  push:
    branches:
      - 'main'
      - 'development'
      - 'update-gh-actions'

jobs:
  os_matrix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-12, macos-latest]
        include:
          - os: ubuntu-latest
            auto-activate-base: false
            auto-update-conda: false
            environment-file: environment.yml
            miniconda-version: latest
            default-shell: bash -l {0}
          - os: macos-12
            auto-activate-base: true
            auto-update-conda: true
            environment-file: environment-mac-unpinned.yml
            miniconda-version: latest
            default-shell: zsh -l {0}
          - os: macos-latest
            auto-activate-base: false
            auto-update-conda: false
            environment-file: environment-mac-unpinned.yml
            miniconda-version: latest
            default-shell: bash -l {0}
    name: Test invoke.py on ${{ matrix.os }} with conda
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.default-shell }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: ${{ matrix.auto-activate-base }}
          auto-update-conda: ${{ matrix.auto-update-conda }}
          miniconda-version: ${{ matrix.miniconda-version }}

      - name: set environment
        run: |
          [[ "$GITHUB_REF" == 'refs/heads/main' ]] \
            && echo "TEST_PROMPTS=tests/preflight_prompts.txt" >> $GITHUB_ENV \
            || echo "TEST_PROMPTS=tests/dev_prompts.txt" >> $GITHUB_ENV
          echo "CONDA_ROOT=$CONDA" >> $GITHUB_ENV
          echo "CONDA_ENV_NAME=invokeai" >> $GITHUB_ENV

      - name: Use Cached Stable Diffusion v1.4 Model
        id: cache-sd-v1-4
        uses: actions/cache@v3
        env:
          cache-name: cache-sd-v1-4
        with:
          path: models/ldm/stable-diffusion-v1/model.ckpt
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: Download Stable Diffusion v1.4 Model
        if: ${{ steps.cache-sd-v1-4.outputs.cache-hit != 'true' }}
        run: |
          [[ -d models/ldm/stable-diffusion-v1 ]] \
            || mkdir -p models/ldm/stable-diffusion-v1
          [[ -r models/ldm/stable-diffusion-v1/model.ckpt ]] \
            || curl -o models/ldm/stable-diffusion-v1/model.ckpt ${{ secrets.SD_V1_4_URL }}

      # - name: Use Cached Dependencies
      #   id: cache-conda-env-invokeai
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-conda-env-${{ env.CONDA_ENV_NAME }}
      #   with:
      #     path: ${{ env.CONDA_ROOT }}/envs/${{ env.CONDA_ENV_NAME }}
      #     key: ${{ env.cache-name }}
      #     restore-keys: ${{ env.cache-name }}-${{ runner.os }}-${{ hashFiles(matrix.environment-file) }}

      - name: Use Cached Conda Packages
        id: cache-conda-env-invokeai
        uses: actions/cache@v3
        env:
          cache-name: cache-conda-env-${{ env.CONDA_ENV_NAME }}
        with:
          path: ${{ env.CONDA_PKGS_DIR }}
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}-${{ runner.os }}-${{ hashFiles(matrix.environment-file) }}

      - name: activate conda env
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ env.CONDA_ENV_NAME }}
          environment-file: ${{ matrix.environment-file }}

      - name: run preload_models.py
        run: python scripts/preload_models.py

      - name: Run the tests
        run: |
          time python scripts/invoke.py \
            --from_file ${{ env.TEST_PROMPTS }}
          mkdir -p outputs/img-samples

      - name: Archive results
        uses: actions/upload-artifact@v3
        with:
          name: results_${{ runner.os }}
          path: outputs/img-samples
