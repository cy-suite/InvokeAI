name: Create Caches
on:
  workflow_dispatch
jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-12 ]
    name: Create Caches on ${{ matrix.os }} conda
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set platform variables
        id: vars
        run: |
            [[ "$RUNNER_OS" = "macOS" ]] \
              && echo "{CONDA_ENV_FILE}={environment-mac.yml}" >> $GITHUB_ENV
            [[ "$RUNNER_OS" = "Linux" ]] \
              && echo "{CONDA_ENV_FILE}={environment.yml}" >> $GITHUB_ENV
            echo "{PYTHON_BIN}={$CONDA/envs/ldm/bin/python}" >> $GITHUB_ENV

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Use Cached Stable Diffusion v1.4 Model
        id: cache-sd-v1-4
        uses: actions/cache@v3
        env:
          cache-name: cache-sd-v1-4
        with:
          path: models/ldm/stable-diffusion-v1/model.ckpt
          key: ${{ env.cache-name }}
          restore-keys: |
            ${{ env.cache-name }}

      - name: Download Stable Diffusion v1.4 Model
        if: ${{ steps.cache-sd-v1-4.outputs.cache-hit != 'true' }}
        run: |
          [[ -e models/ldm/stable-diffusion-v1 ]] \
            || mkdir -p models/ldm/stable-diffusion-v1
          [[ ! -e models/ldm/stable-diffusion-v1/model.ckpt ]] \
            || curl -o models/ldm/stable-diffusion-v1/model.ckpt ${{ secrets.SD_V1_4_URL }}

      - name: Use Cached Dependencies
        id: cache-conda-env-ldm
        uses: actions/cache@v3
        env:
          cache-name: cache-conda-env-ldm
        with:
          path: ~/.conda/envs/ldm
          key: ${{ env.cache-name }}
          restore-keys: |
            ${{ env.cache-name }}-${{ runner.os }}-${{ hashFiles(env.CONDA_ENV_FILE) }}

      - name: Install Dependencies
        if: ${{ steps.cache-conda-env-ldm.outputs.cache-hit != 'true' }}
        run: |
          conda env create -f ${{ env.CONDA_ENV_FILE }}

      - name: Use Cached Huggingface and Torch models
        id: cache-huggingface-torch
        uses: actions/cache@v3
        env:
          cache-name: cache-huggingface-torch
        with:
          path: ~/.cache
          key: ${{ env.cache-name }}
          restore-keys: |
            ${{ env.cache-name }}-${{ hashFiles('scripts/preload_models.py') }}

      - name: Download Huggingface and Torch models
        if: ${{ steps.cache-huggingface-torch.outputs.cache-hit != 'true' }}
        run: |
          ${{ env.PYTHON_BIN }} scripts/preload_models.py
