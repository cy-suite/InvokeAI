trigger:
  branches:
    include:
      - main
      - update-gh-actions
  paths:
    include:
      - azure-pipelines.yml
      - environment-mac.yml

variables:
  - name: CHECKPOINT_CACHE_DIR
    value: '$(Pipeline.Workspace)/models/ldm/stable-diffusion-v1'
  - name: CONDA_CACHE_DIR
    value: '/usr/share/miniconda/envs'

pool:
  vmImage: macOS-12

steps:
  - task: Cache@2
    displayName: checkpoint cache
    inputs:
      key: checkpoint | stable-diffusion-v1
      restoreKeys: checkpoint
      path: $(CHECKPOINT_CACHE_DIR)
      cacheHitVar: CACHE_RESTORED

  - script: 'curl -o $(CHECKPOINT_CACHE_DIR)/model.ckpt "$(checkpoint-url)"'
    displayName: download checkpoints
    condition: ne(variables.CACHE_RESTORED, 'true')
    env:
      checkpoint-url: $(checkpoint-url)

  - script: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - task: Cache@2
    displayName: Use cached Anaconda environment
    inputs:
      key: 'conda | "$(Agent.OS)" | environment.yml'
      restoreKeys: |
        python | "$(Agent.OS)"
        python
      path: $(CONDA_CACHE_DIR)
      cacheHitVar: CONDA_CACHE_RESTORED

  - script: |
      conda env create \
        --quiet \
        --file environment-mac.yml
    displayName: Create Anaconda environment
    condition: eq(variables.CONDA_CACHE_RESTORED, 'false')

  - task: Bash@3
    displayName: 'Create and test Conda Env'
    inputs:
      targetType: inline
      script: |
        conda init bash
        conda activate invokeai
        python scripts/preload_models.py
        python scripts/invoke.py \
          --from_file tests/preflight_prompts.txt
    env:
      CONDA_SUBDIR: 'osx-64'
      PIP_EXISTS_ACTION: 'w'
      PYTORCH_ENABLE_MPS_FALLBACK: '1'
